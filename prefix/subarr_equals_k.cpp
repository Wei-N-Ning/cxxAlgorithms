//
// Created by weining on 22/7/20.
//

#define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN
#include "doctest/doctest.h"
#include <vector>

// this is a challenge I saw on leetcode.
// I implemented the solution in python3 using the same prefix-sum + array-swapping
// scenario
// both the python version and this version failed the leetcode the submission system
// due to excessive run time...

using namespace std;
class Solution
{
public:
    int subarraySum( vector< int >& nums, int k )
    {
        auto count = 0;
        vector< int > prefix_sums( nums.size(), 0 );
        for ( auto i = 1; i < nums.size(); ++i )
        {
            prefix_sums[ i ] = prefix_sums[ i - 1 ] + nums[ i - 1 ];
        }
        for ( auto i = 0; i < nums.size(); ++i )
        {
            vector< int > sums( nums.size(), 0 );
            sums[ i ] = nums[ i ];
            for ( auto j = i; j < nums.size(); ++j )
            {
                auto s = prefix_sums[ j ] - prefix_sums[ i ] + nums[ j ];
                if ( s == k )
                {
                    count++;
                }
                sums[ j ] = s;
            }
        }
        return count;
    }
};

TEST_CASE( "test 1" )
{
    Solution so;
    vector< int > arr{ 1, 2, 3 };
    auto o = so.subarraySum( arr, 3 );
    CHECK_EQ( o, 2 );
}

TEST_CASE( "test 2" )
{
    Solution so;
    vector< int > arr{ 1, 1, 1 };
    auto o = so.subarraySum( arr, 2 );
    CHECK_EQ( o, 2 );
}

TEST_CASE( "performance test" )
{
    Solution so;
    vector< int > arr{
        385,  -937, 560,  -916, -395, -115, 855,  -54,  540,  -809, -693, 251,  376,  964,  164,
        -322, 553,  370,  -313, 228,  430,  -701, -323, 54,   -430, 238,  -51,  -856, 984,  170,
        772,  -23,  -198, -214, -509, 398,  -500, 166,  -725, 945,  -583, 130,  136,  566,  -85,
        -181, 8,    -118, -804, -316, 195,  247,  183,  -908, 292,  -162, -891, -596, 658,  749,
        30,   -799, -253, -81,  -880, 687,  606,  -129, -665, 752,  -888, -292, -152, -754, -234,
        -188, -190, -418, -702, -514, -408, 355,  601,  -809, -233, -683, -321, -330, -611, -420,
        762,  375,  -600, -374, 780,  381,  -884, -712, 291,  663,  -387, 177,  860,  712,  -611,
        -380, 338,  755,  -979, 10,   506,  -56,  -202, -601, -610, -262, 834,  90,   966,  -538,
        -858, 341,  654,  605,  -975, 275,  -778, 253,  674,  310,  -417, 978,  -3,   974,  -489,
        -990, 581,  700,  -136, -383, -285, -95,  -211, -468, -946, 736,  684,  959,  614,  964,
        257,  -684, -1,   241,  614,  -525, 453,  -670, 469,  -792, 293,  -757, -134, 29,   -149,
        -668, 58,   39,   35,   783,  -935, 566,  -677, -790, -352, -853, 780,  -127, 238,  981,
        -880, -488, -167, 830,  407,  -735, 244,  540,  -269, -412, 673,  -387, 508,  -654, 448,
        440,  745,  -30,  435,  684,  663,  786,  722,  506,  69,   512,  -773, 953,  -516, 159,
        -793, -230, -659, 713,  -945, -214, -400, 327,  321,  574,  -55,  -535, 316,  941,  -276,
        457,  -15,  762,  -223, -291, 930,  758,  953,  -93,  907,  -928, 500,  88,   51,   -65,
        -109, -268, 782,  -894, 491,  -351, 946,  -36,  -29,  -831, 242,  556,  -706, 896,  -65,
        -241, -688, 286,  -706, 764,  584,  345,  221,  150,  607,  -129, 216,  -382, -637, 900,
        132,  -826, -889, 782,  895,  -702, -415, -800, -263, -143, -890, -254, 22,   342,  -898,
        251,  832,  121,  224,  -730, 933,  -707, -173, -331, -344, 604,  -821, 989,  -781, -308,
        544,  -640, -522, -798, 886,  957,  -322, -221, -474, -376, 380,  -720, -1,   -590, -167,
        267,  -318, -319, 305,  -477, -686, -239, 998,  -459, 483,  691,  707,  -42,  231,  984,
        -949, 225,  341,  801,  759,  -91,  -395, -180, -779, 26,   -971, -189, 735,  -82,  215,
        -82,  -899, -210, 833,  -492, -293, -936, 6,    -19,  938,  352,  -335, -780, -242, -517,
        -444, 661,  727,  -25,  652,  655,  -150, 501,  859,  472,  -313, 176,  494,  -596, 125,
        -85,  857,  -860, 764,  -654, -364, -94,  440,  -124, 308,  -508, 260,  991,  -427, 827,
        731,  -929, -43,  -499, -932, -666, -149, -772, 333,  210,  -698, -664, 267,  -498, 164,
        -68,  112,  -260, -333, -827, 917,  642,  800,  -888, -198, 700,  -957, -889, -876, -70,
        -201, 440,  531,  -60,  -879, -586, -23,  501,  -505, -731, 677,  823,  -6,   627,  -414,
        -49,  497,  756,  890,  -49,  -387, -353, -754, 751,  996,  66,   -412, 985,  -223, -499,
        -356, -682, -712, 326,  663,  741,  -86,  402,  810,  83,   422,  -725, -142, -847, -836,
        -798, 44,   -328, 242,  704,  750,  351,  -587, 672,  447,  -247, 158,  46,   937,  927,
        -676, -821, 666,  256,  962,  336,  17,   374,  425,  -606, -277, -493, -612, 891,  -472,
        -312, -355, 499,  -19,  563,  -649, 476,  -86,  -611, 85,   824,  852,  414,  196,  82,
        740,  -511, 225,  459,  -465, -275, 860,  -63,  911,  -899, 963,  394,  -726, -154, 642,
        874,  155,  33,   717,  937,  191,  -743, 269,  -444, -708, -440, -338, 323,  839,  777,
        489,  108,  -172, -895, -667, 385,  380,  628,  552,  -403, 369,  750,  581,  21,   -794,
        454,  358,  703,  47,   370,  525,  -920, 123,  -294, -705, 649,  -800, -33,  384,  -753,
        -611, -861, 593,  -36,  -144, 924,  -491, -625, 860,  570,  291,  523,  -618, 336,  -226,
        644,  -159, 208,  48,   285,  381,  787,  -352, 293,  -803, -561, -320, -980, 321,  -69,
        228,  -796, 913,  -378, -95,  -399, -25,  8,    994,  417,  686,  399,  378,  955,  361,
        -402, 238,  569,  -31,  -97,  -929, -375, -75,  795,  940,  17,   173,  -379, -527, -315,
        -463, 968,  -816, 872,  267,  -431, -991, 913,  668,  -106, 152,  -105, -787, 617,  868,
        733,  41,   -501, 428,  441,  214,  -293, 813,  -393, 159,  632,  284,  304,  -578, -286,
        -205, -675, -245, -315, -105, -992, 760,  -979, 464,  -861, -224, 972,  -856, 68,   -874,
        273,  217,  -600, -47,  -332, -813, 947,  334,  -411, 52,   -278, -322, 917,  339,  704,
        -337, 683,  -102, -507, -585, -792, 371,  29,   151,  190,  1,    885,  -858, -248, -483,
        -576, -642, -57,  -882, 950,  592,  995,  856,  990,  189,  776,  802,  -138, -943, -210,
        -854, 322,  -419, 667,  -992, -174, -809, -233, -518, 919,  887,  347,  -22,  -914, 435,
        -507, -445, 255,  -464, -321, -543, -685, -569, 968,  95,   30,   -633, -126, -691, -690,
        -767, 243,  161,  -54,  925,  -53,  849,  745,  946,  543,  -401, 630,  987,  640,  350,
        810,  -983, 321,  -652, 888,  638,  -519, -957, 972,  391,  489,  -772, 307,  -57,  82,
        -615, 392,  231,  -797, 577,  -304, 974,  -633, 772,  -856, 450,  264,  -362, -318, 989,
        725,  -710, 558,  -875, 209,  -517, 833,  -669, 806,  108,  518,  -839, 19,   602,  514,
        526,  491,  -872, -88,  -122, 130,  -17,  -323, 427,  -617, 165,  -119, -374, -737, -853,
        43,   617,  -797, -444, -741, -126, -534, 69,   579,  87,   820,  205,  -806, 933,  -927,
        664,  188,  795,  226,  540,  321,  845,  704,  45,   764,  -77,  -669, 848,  -734, -552,
        -438, -509, 846,  895,  -719, -210, 864,  411,  252,  86,   790,  303,  -108, -261, -727,
        -35,  -461, -841, -637, 141,  -434, 906,  -575, 321,  286,  -984, -897, -720, -80,  -166,
        -471, 772,  86,   483,  164,  200,  -893, -81,  759,  -397, 764,  205,  -186, -929, -944,
        249,  -301, -95,  -373, 522,  469,  635,  -25,  569,  -287, 619,  -875, -352, -419, -802,
        -125, 705,  228,  -406, 739,  881,  -149, -433, -652, -115, 495,  -910, 355,  -909, 429,
        207,  -968, -993, -766, -85,  -360, 5,    404,  -256, -939, 511,  51,   116,  -121, 164,
        426,  978,  -170, -232, 145,  -967, -638, 538,  390,  750,  491,  735,  -229, -671, 375,
        -272, -553, 111,  -334, -330, 924,  64,   823,  302,  -132, -592, 479,  -921, -93,  465,
        -453, -98,  -303, -330, -535, 56,   691,  -437, 383,  -817, -175, 999,  118,  -858, -125,
        -287, 353,  -135, -230, -350, 629,  154,  -773, -5,   -571 };
    auto o = so.subarraySum( arr, -516 );
    CHECK_EQ( o, 30 );
}